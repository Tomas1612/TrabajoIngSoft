node {
   def mvnHome
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
      git 'https://github.com/Tomas1612/TrabajoIngSoft'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configuredkbib
      // **       in the global configuration.           
      mvnHome = tool 'M3'
   }
   stage('Build') {
      // Run the maven build
      withEnv(["MVN_HOME=$mvnHome"]) {
             dir('server/') {
             if (isUnix()) {
                sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
             } else {
                bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
             }
         }
      }
   }
   stage('SonarCloud'){
       withEnv(["MVN_HOME=$mvnHome"]) {
        dir('server/'){
            //metricas de codigo
            sh '"$MVN_HOME/bin/mvn" verify sonar:sonar -Dsonar.projectKey=Tomas1612_TrabajoIngSoft -Dsonar.organization=tomas1612 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=47a38890194f4f3b3e238b9777c9c19adf736647 -Dmaven.test.failure.ignore=true'
        }
      }
   }
   stage('Push Image') {
	 docker.withRegistry('https://hub.docker.com/repository/docker/macrosizen/server', 'dockerhub') {
		sh 'server/'
		customImage = docker.build('server/Dockerfile')
		customImage.push()		
    }
   }
   /*stage('Push Image'){
        withCredentials([usernamePassword(credentialsId: 'dockerhub'/*, passwordVariable: 'password', usernameVariable: 'user')]) 
            sh "docker login -u 'macrosizen' -p 'tomiRiver10'"
            sh label: '', script: 'docker push macrosizen/server'
    }
   
   environment {
    def registry = "macrosizen/server"
    def registryCredential = 'dockerhub'
    def dockerImage = ''as
    }
    stage('Building image') {
      script {
        docker.build registry + ":$BUILD_NUMBER"
        }
    }
    stage('Deploy Image') {
            docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
    }*/
   stage('Results'){
       archiveArtifacts 'server/target/*.jar'
       junit '**/target/surefire-reports/TEST-*.xml'
   }
}


